# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gYF1gsPsTxEXb0jv5O83i_xC3HkTvVzg
"""

import pandas as pd

data=pd.read_csv("/content/i5dem.csv")

data



from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
data["encoded_product"] = label_encoder.fit_transform(data["product"])

data = data["product;month_cons;inventory;rec_qte"].str.split(";", expand=True)

# Rename the columns
data.columns = ["product", "month_cons","inventory","rec_qte"]

data

unique_products = data['product'].unique()

from sklearn.feature_extraction.text import TfidfVectorizer
tfidf = TfidfVectorizer()

from sklearn.metrics.pairwise import linear_kernel

tfidf_matrix = tfidf.fit_transform(unique_products)

cosine_sim=linear_kernel(tfidf_matrix,tfidf_matrix)

indices = pd.Series({product: idx for idx, product in enumerate(unique_products)})

#indices=pd.Series(unique_products.index,index=unique_products).drop_duplicates()

indices

indices['Grilled Scallops with Lemon Butter']

import numpy as np
def get_recommandations(title, cosine_sim=cosine_sim):
    idx = indices[title]
    sim_scores = cosine_sim[idx]
    sim_indexes = np.argsort(sim_scores)[::-1][1:5]
    sim_product_names = unique_products[sim_indexes]
    return(sim_product_names)

#get_recommandations('Albacore Tuna')

history=['Albacore Tuna','Almond Butter Cups','Butter-Seared Sea Scallops','1% Milk']

recommandation=[]
for i in history:
  recommended_items = get_recommandations(i)
  recommandation.extend(recommended_items)

recommandation

data

#for i in recommandation:
#encoded_product = data.loc[data['product'] == "1% Milk", 'encoded_product'].values[0]
#print(encoded_product)

"""save encoded_product in file and then predict quantite with the model


"""

import pickle
pickle.dump(cosine_sim,open('food_model.pkl','wb'))
pickle.dump(indices,open('indices.pkl','wb'))
pickle.dump(unique_products,open('dta.pkl','wb'))

